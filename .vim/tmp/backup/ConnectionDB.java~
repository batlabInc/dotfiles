package de.hs_mannheim.DBConnection;

/******************************************************
 * 
 * Singleton-Pattern to provide connection to DB. 
 * Why Singleton-Pattern ??????? 
 * Because the Connection just need one instanciation 
 * Over the hole Session. 
 * Just a Simple Class with a private Constructor, 
 * and a static fonction that do the Job: 
 * if( instance == null )
 * provide instance; 
 * else
 * return the already made instance; 
 * 
 * *****************************************************/

import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.SQLException; 

public class ConnectionDB {
	
	 /* Please be aware that this informations 
	  * have to be move from the code         */
	 private String 	  url="141.19.96.94" ;
	 private String		  port="5432";
	 private String           userName="ws13-gruppe1"; 
	 private String           password="esprit2013";
	 //private String	  driver="org.postgresql.Driver";  
	 
	 private static Connection connection; 

private ConnectionDB(){
	try {
		connection = DriverManager.getConnection(
				"jdbc:postgresql:"+url+":"+port,
				userName,
				password); 
		
	} catch (SQLException e) {
		// TODO: handle exception
	}
}

public static Connection getInstance(){
	
	if(connection == null)
	{
	     new ConnectionDB(); 
	}
	else
	{
		//DO NOthing ;) 
	}
	
	return connection; 
}
	
}//End of class 
