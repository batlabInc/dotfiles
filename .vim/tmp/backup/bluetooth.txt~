##Bluetooth: 
--------- 

<strong> Anwendungsfall </strong> : Benutzung der Sabre für die Steuerung eines LED-Tafel. 

####Seite der Microcontroller ( LED-Tafel ) : 
   ---------------------------------------- 

   Der Microcontroller soll ein serielle Verbindungsschnittstelle wie ein 
   RS232 oder UART besitzen .
   Dazu benoetigen wir auch ein Bluetooth-module, diese muss in der Lage sein SPP-Profile zu unterstutzen, und der muss auch mit 
   seriellen Verbindung compatible sein. 
   zB: DB9 , DIP oder auch CMS ..... 

   1. Verbindung der Bluetooth Module mit dem MC (Hardware). 
    diese Verbindung muss ein "Cross-Verbindung" sein. 
    dh: Rx-Pin MC -------> Tx-Pin der Bluetooth Module 
         Tx-Pin MC -------> Rx-Pin der Bluetooth Module 


  2. Bautrate einstellen ( Software ) 
     Es muss hier die Baudrate eingestellt werden ( siehe Developper-Guide der MC ). 
     Man muss aber nicht seite der Sarbre( Android ) die Bautrate einstellen. 
     den Wert , die man hier gibt ist eigentlich egal , da seite der Android host 
     wird durch die blutooth-module die Protokolle synchronisiert . 


###Seite der Android ( Sarbre ) 

1. in der AndroidManifest datei muss die Rechte eingetragen werden. 

```
<uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
<uses-permission android:name="android.permission.BLUETOOTH" />
```

Android SDK stellt drei Klassen zur Verfügung um die Bluetooth zu benutzen
:<br/>

BluetoothDevice : Die Klasse repräsentiert ein Bluetooth host <br/>
BluetoothAdapter : Die Klasse ermöglicht den Scann von Blutooth-port, Activieren/Deaktivieren 
von Bluetooth ......
BluetoothSocket: Durch diese Klasse bekommt man die Socket zum Lesen und Schreiben auf dem 
Bluetooth Verbindung. 

Diese sind die wesentliche Merkmale für die Programmierung von Bluotooth Apps unter 
Android , fuer weitere Informationen wird es auf Android Developper Webseite verwiesen : 
http://developer.android.com/guide/topics/connectivity/bluetooth.html


Die Interface sieht so aus: 

```java
   public class BtInterface {
         private BluetoothDevice device = null;// Bluetooth module auf der MC  
         private BluetoothSocket socket = null;
         private InputStream receiveStream = null;// Empfangkanal   
         private OutputStream sendStream = null;//  SendeKanal 
    }
```


