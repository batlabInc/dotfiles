package de.hs_mannheim.server;
import java.io.PrintStream;
import java.io.OutputStream; 
import java.io.InputStream; 
import  java.net.Socket; 
import java.net.URLDecoder;

public class Sockethandler implements Runnable{

        Socket socket; 
        Server server; 
        Reception reception = null; 
        Emission  emission  = null; 
        TcpEinlogProtokol protocol ; 
        boolean running; 
        Thread handlerThread; 

        public Sockethandler(Socket soc, Server serv)
        {
            socket = soc; 
            server = serv;  
            running=true; 
            handlerThread = new Thread(this); 
            handlerThread.start();
        }

        public void stop()
        {
            System.out.println("Socket handler Stopped");
            running = false;
        /*if(mHandlerThread != null){
            if(mHandlerThread.isAlive()){
                mHandlerThread.interrupt();
            }
        }*/
        }



  public void run() {
        System.out.println("Socket handler started");
        try {
            //Wait a second..
            Thread.sleep(250);

            //Get the streams..
            OutputStream os = socket.getOutputStream();
            InputStream is  = socket.getInputStream();
            
            //Read in complete command

            boolean keepalive    = true;

            protocol = new 
            		TcpEinlogProtokol(is, os); 

            protocol.process(); 
            
            //Close streams..
            os.close();
            is.close();

            socket.close();

        } catch (Exception iOException) {
        	System.out.println(iOException.toString());
        }

        //Tell the server
        server.sockethandlerFinished(this);

        System.out.println("Finished");
    
        }

} // end of the class 
