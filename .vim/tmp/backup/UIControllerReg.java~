package de.hs_mannheim.ui;

import java.awt.event.ActionEvent;

import javax.swing.JOptionPane;

import de.hs_mannheim.launcher.LaunchEinloggen;
import de.hs_mannheim.tcp_client.ClientReq;
import de.hs_mannheim.ui.UIController.ButtonControll;
import user.FormalCheck;
import user.UserModellForRegistration;

public class UIControllerReg {

	Registrieren view; 
	UserModellForRegistration model; 
	String retype;
	ConfirmExitWindows win; 
	Thread t; 
	public UIControllerReg(Registrieren v, UserModellForRegistration m){
		view = v; 
		model = m;
		 
		
		this.view.addObservabÄºe(new ButtonControll());
	}
	
	
	class ButtonControll implements java.awt.event.ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			
			String cmd = e.getActionCommand(); 
			
			 retype = view.updateModel(model);
			System.out.println(retype);
			
			if(cmd == Registrieren.ACTION_EINLOG)
			{
				view.setVisible(false); 
				new LaunchEinloggen(); 
				
			}
			else if(cmd == Registrieren.ACTION_EXIT)
			{
				win = 
				  new ConfirmExitWindows(ConfirmExitWindows.exitConfirmation,view); 
				
				int choix = win.showDialog(); 
				if(choix == JOptionPane.YES_OPTION){
				view.setVisible(false);
				System.exit(0);
				}
			}
			else if(cmd == Registrieren.ACTION_REGISTRIEREN)
			{
				if(	retype.equals(model.getPassword()) 
				  && FormalCheck.passwordValidator(model.getPassword())
				  && FormalCheck.emailValidator(model.getEmail())
				  && FormalCheck.userNameValidator(model.getUsername())
				  //&& model.getVorname() != null 
				  //&& model.getName() != null 
				  ) 
				{
					System.out.println("Formal Check OK!"); 
					System.out.println(model.getUsername());
					t = new Thread(new ClientReq('s',(Object) model));
					t.start();
				}
				else
				{
					System.out.println("Formal Check not OK");
				}
			}
			else{
				
			}
		}
		
	}
	
	
}
